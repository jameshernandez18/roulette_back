2021-08-31 15:00:50,142 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 5596 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 15:00:50,149 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 15:00:50,150 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 15:00:50,784 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.telefonica.b2b.feasibility.datapower.DatapowerApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'parameterService' for bean class [com.telefonica.b2b.feasibility.datapower.service.impl.ParameterService] conflicts with existing, non-compatible bean definition of same name and class [com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService]
2021-08-31 15:00:51,552 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.telefonica.b2b.feasibility.datapower.DatapowerApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'parameterService' for bean class [com.telefonica.b2b.feasibility.datapower.service.impl.ParameterService] conflicts with existing, non-compatible bean definition of same name and class [com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:189)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:331)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'parameterService' for bean class [com.telefonica.b2b.feasibility.datapower.service.impl.ParameterService] conflicts with existing, non-compatible bean definition of same name and class [com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:349)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:287)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	... 14 common frames omitted
2021-08-31 15:04:07,440 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 20272 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 15:04:07,443 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 15:04:07,443 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 15:04:07,649 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.telefonica.b2b.feasibility.datapower.DatapowerApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'parameterService' for bean class [com.telefonica.b2b.feasibility.datapower.service.impl.ParameterService] conflicts with existing, non-compatible bean definition of same name and class [com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService]
2021-08-31 15:04:07,805 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.telefonica.b2b.feasibility.datapower.DatapowerApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'parameterService' for bean class [com.telefonica.b2b.feasibility.datapower.service.impl.ParameterService] conflicts with existing, non-compatible bean definition of same name and class [com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:189)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:331)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'parameterService' for bean class [com.telefonica.b2b.feasibility.datapower.service.impl.ParameterService] conflicts with existing, non-compatible bean definition of same name and class [com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:349)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:287)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	... 14 common frames omitted
2021-08-31 15:06:26,240 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 12564 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 15:06:26,243 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 15:06:26,244 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 15:06:26,469 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.telefonica.b2b.feasibility.datapower.DatapowerApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'parameterService' for bean class [com.telefonica.b2b.feasibility.datapower.service.impl.ParameterService] conflicts with existing, non-compatible bean definition of same name and class [com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService]
2021-08-31 15:06:26,571 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.telefonica.b2b.feasibility.datapower.DatapowerApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'parameterService' for bean class [com.telefonica.b2b.feasibility.datapower.service.impl.ParameterService] conflicts with existing, non-compatible bean definition of same name and class [com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:189)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:331)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'parameterService' for bean class [com.telefonica.b2b.feasibility.datapower.service.impl.ParameterService] conflicts with existing, non-compatible bean definition of same name and class [com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:349)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:287)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	... 14 common frames omitted
2021-08-31 15:07:41,456 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 11708 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 15:07:41,458 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 15:07:41,459 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 15:07:42,296 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 15:07:42,438 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 125 ms. Found 8 JPA repository interfaces.
2021-08-31 15:07:42,679 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 15:07:42,726 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 15:07:42,748 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 15:07:42,751 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:07:42,751 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:07:42,751 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:07:42,752 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 15:07:42,752 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:07:42,752 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:07:42,753 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:07:42,753 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:07:42,753 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:07:42,781 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$ad18aaab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:07:42,782 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$3e3f3e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:07:42,834 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 15:07:42,846 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 15:07:43,017 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 15:07:43,020 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 15:07:43,177 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 15:07:43,185 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 15:07:43,185 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 15:07:43,367 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 15:07:43,367 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1869 ms
2021-08-31 15:07:43,422 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 15:07:43,434 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 15:07:43,434 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 15:07:43,435 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 15:07:43,435 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 15:07:43,436 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 15:07:43,439 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 15:07:43,671 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 15:07:43,748 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 15:07:43,948 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 15:07:44,078 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 15:07:44,541 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 15:07:44,561 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 15:07:46,085 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 15:07:46,101 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:07:46,208 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:07:46,665 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 15:07:46,728 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:07:46,783 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 15:07:46,785 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:07:46,788 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 15:07:46,796 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 15:07:46,797 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 15:07:46,808 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 15:07:46,828 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 31 common frames omitted
2021-08-31 15:09:08,372 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 15080 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 15:09:08,375 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 15:09:08,376 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 15:09:09,219 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 15:09:09,332 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 105 ms. Found 8 JPA repository interfaces.
2021-08-31 15:09:09,563 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 15:09:09,609 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 15:09:09,636 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 15:09:09,638 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:09:09,638 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:09:09,639 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:09:09,640 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 15:09:09,640 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:09:09,640 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:09:09,641 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:09:09,641 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:09:09,641 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:09:09,664 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$2238575] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:09:09,665 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$58eeceb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:09:09,688 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 15:09:09,698 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 15:09:09,885 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 15:09:09,888 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 15:09:10,054 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 15:09:10,062 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 15:09:10,062 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 15:09:10,226 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 15:09:10,226 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1808 ms
2021-08-31 15:09:10,280 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 15:09:10,289 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 15:09:10,290 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 15:09:10,290 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 15:09:10,291 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 15:09:10,291 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 15:09:10,293 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 15:09:10,461 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 15:09:10,505 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 15:09:10,652 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 15:09:10,766 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 15:09:11,120 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 15:09:11,134 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 15:09:12,361 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 15:09:12,369 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:09:12,420 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:09:12,748 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 15:09:12,806 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:09:12,858 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 15:09:12,860 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:09:12,863 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 15:09:12,865 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 15:09:12,866 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 15:09:12,876 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 15:09:12,896 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 31 common frames omitted
2021-08-31 15:10:45,418 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 19232 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 15:10:45,421 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 15:10:45,422 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 15:10:46,214 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 15:10:46,317 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 96 ms. Found 8 JPA repository interfaces.
2021-08-31 15:10:46,530 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 15:10:46,572 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 15:10:46,592 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 15:10:46,594 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:10:46,594 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:10:46,594 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:10:46,595 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 15:10:46,595 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:10:46,595 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:10:46,596 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:10:46,596 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:10:46,596 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:10:46,618 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$83928131] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:10:46,619 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$da5dca6d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:10:46,640 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 15:10:46,650 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 15:10:46,784 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 15:10:46,787 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 15:10:46,940 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 15:10:46,947 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 15:10:46,947 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 15:10:47,106 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 15:10:47,107 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1647 ms
2021-08-31 15:10:47,153 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 15:10:47,162 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 15:10:47,162 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 15:10:47,163 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 15:10:47,163 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 15:10:47,164 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 15:10:47,165 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 15:10:47,331 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 15:10:47,374 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 15:10:47,484 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 15:10:47,570 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 15:10:47,928 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 15:10:47,941 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 15:10:49,205 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 15:10:49,213 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:10:49,263 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:10:49,590 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 15:10:49,661 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:10:49,767 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 15:10:49,773 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:10:49,777 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 15:10:49,781 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 15:10:49,783 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 15:10:49,806 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 15:10:49,839 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 31 common frames omitted
2021-08-31 15:12:39,309 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 5656 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 15:12:39,312 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 15:12:39,313 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 15:12:40,070 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 15:12:40,202 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 120 ms. Found 8 JPA repository interfaces.
2021-08-31 15:12:40,447 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 15:12:40,491 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 15:12:40,518 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 15:12:40,520 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:12:40,520 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:12:40,521 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:12:40,521 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 15:12:40,522 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:12:40,522 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:12:40,523 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:12:40,523 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:12:40,524 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:12:40,548 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$16141265] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:12:40,549 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$6cdf5ba1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:12:40,571 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 15:12:40,582 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 15:12:40,735 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 15:12:40,741 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 15:12:40,911 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 15:12:40,919 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 15:12:40,920 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 15:12:41,212 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 15:12:41,212 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1850 ms
2021-08-31 15:12:41,262 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 15:12:41,270 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 15:12:41,271 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 15:12:41,271 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 15:12:41,272 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 15:12:41,273 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 15:12:41,275 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 15:12:41,509 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 15:12:41,552 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 15:12:41,651 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 15:12:41,737 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 15:12:42,086 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 15:12:42,110 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 15:12:43,486 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 15:12:43,493 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:12:43,547 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:12:43,873 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 15:12:43,933 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:12:43,986 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 15:12:43,988 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:12:43,991 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 15:12:43,994 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 15:12:43,995 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 15:12:44,005 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 15:12:44,024 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 31 common frames omitted
2021-08-31 15:16:40,120 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 8852 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 15:16:40,123 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 15:16:40,123 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 15:16:40,908 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 15:16:41,021 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 105 ms. Found 8 JPA repository interfaces.
2021-08-31 15:16:41,251 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 15:16:41,303 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 15:16:41,325 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 15:16:41,327 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:16:41,327 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:16:41,328 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:16:41,328 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 15:16:41,329 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:16:41,329 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:16:41,329 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:16:41,330 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:16:41,330 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:16:41,356 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$c3d85985] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:16:41,357 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$1aa3a2c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:16:41,383 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 15:16:41,394 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 15:16:41,549 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 15:16:41,552 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 15:16:41,715 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 15:16:41,723 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 15:16:41,723 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 15:16:41,899 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 15:16:41,899 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1739 ms
2021-08-31 15:16:41,949 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 15:16:41,957 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 15:16:41,958 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 15:16:41,958 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 15:16:41,959 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 15:16:41,959 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 15:16:41,962 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 15:16:42,132 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 15:16:42,174 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 15:16:42,279 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 15:16:42,363 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 15:16:42,692 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 15:16:42,705 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 15:16:43,908 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 15:16:43,918 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:16:43,967 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:16:44,285 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 15:16:44,344 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:16:44,394 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 15:16:44,396 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:16:44,400 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 15:16:44,402 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 15:16:44,403 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 15:16:44,413 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 15:16:44,432 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 31 common frames omitted
2021-08-31 15:23:14,727 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 14044 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 15:23:14,730 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 15:23:14,730 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 15:23:15,541 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 15:23:15,658 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 110 ms. Found 8 JPA repository interfaces.
2021-08-31 15:23:15,907 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 15:23:15,955 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 15:23:15,978 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 15:23:15,980 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:23:15,981 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:23:15,982 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:23:15,982 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 15:23:15,983 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:23:15,983 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 15:23:15,983 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:23:15,983 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:23:15,984 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 15:23:16,012 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$530ca314] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:23:16,013 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$a9d7ec50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 15:23:16,045 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 15:23:16,060 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 15:23:16,231 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 15:23:16,234 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 15:23:16,402 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 15:23:16,411 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 15:23:16,411 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 15:23:16,622 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 15:23:16,623 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1851 ms
2021-08-31 15:23:16,678 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 15:23:16,688 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 15:23:16,688 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 15:23:16,688 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 15:23:16,690 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 15:23:16,690 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 15:23:16,692 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 15:23:16,896 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 15:23:16,954 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 15:23:17,072 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 15:23:17,165 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 15:23:17,526 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 15:23:17,541 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 15:23:18,805 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 15:23:18,813 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:23:18,871 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:23:19,236 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 15:23:19,302 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 15:23:19,355 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 15:23:19,358 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 15:23:19,360 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 15:23:19,363 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 15:23:19,364 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 15:23:19,378 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 15:23:19,398 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 31 common frames omitted
2021-08-31 16:06:55,237 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 20260 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:06:55,250 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:06:55,250 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:06:56,024 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:06:56,125 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 98 ms. Found 8 JPA repository interfaces.
2021-08-31 16:06:56,341 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:06:56,388 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:06:56,410 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:06:56,410 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:06:56,410 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:06:56,410 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:06:56,410 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:06:56,410 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:06:56,410 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:06:56,410 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:06:56,410 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:06:56,410 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:06:56,441 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$ccd8893a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:06:56,441 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$23a3d276] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:06:56,457 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:06:56,472 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:06:56,610 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:06:56,610 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:06:56,775 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:06:56,791 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:06:56,791 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:06:56,973 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:06:56,973 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1687 ms
2021-08-31 16:06:57,029 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:06:57,045 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:06:57,045 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:06:57,045 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:06:57,045 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:06:57,045 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:06:57,045 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:06:57,211 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:06:57,258 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:06:57,359 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:06:57,473 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:06:57,814 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:06:57,829 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:06:59,022 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:06:59,038 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:06:59,091 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:06:59,392 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:06:59,461 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:06:59,639 [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [Method=lambda$buildAutowiringMetadata$2] [Line=502] - Autowired annotation should only be used on methods with parameters: public java.util.List com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll()
2021-08-31 16:06:59,655 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:06:59,662 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:06:59,662 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:06:59,662 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:06:59,662 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:06:59,677 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:06:59,693 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 31 common frames omitted
2021-08-31 16:08:17,130 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 15884 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:08:17,133 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:08:17,133 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:08:17,897 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:08:18,049 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 146 ms. Found 8 JPA repository interfaces.
2021-08-31 16:08:18,276 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:08:18,317 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:08:18,337 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:08:18,339 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:08:18,339 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:08:18,340 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:08:18,340 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:08:18,341 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:08:18,341 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:08:18,342 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:08:18,342 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:08:18,342 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:08:18,368 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$280cc33e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:08:18,369 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$7ed80c7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:08:18,391 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:08:18,401 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:08:18,554 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:08:18,559 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:08:18,724 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:08:18,731 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:08:18,732 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:08:18,901 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:08:18,901 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1731 ms
2021-08-31 16:08:18,952 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:08:18,963 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:08:18,964 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:08:18,964 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:08:18,965 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:08:18,965 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:08:18,967 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:08:19,132 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:08:19,176 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:08:19,296 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:08:19,387 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:08:19,726 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:08:19,740 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:08:20,954 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:08:20,962 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:08:21,014 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:08:21,340 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:08:21,400 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:08:21,589 [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [Method=lambda$buildAutowiringMetadata$2] [Line=502] - Autowired annotation should only be used on methods with parameters: public java.util.List com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll()
2021-08-31 16:08:21,598 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowService': Injection of autowired dependencies failed; nested exception is java.lang.StackOverflowError
2021-08-31 16:08:21,602 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:08:21,605 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:08:21,608 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:08:21,608 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:08:21,620 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:08:21,645 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowService': Injection of autowired dependencies failed; nested exception is java.lang.StackOverflowError
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:405)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: java.lang.StackOverflowError: null
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
	at com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll(FeasibilityNetworkWindowService.java:27)
2021-08-31 16:09:13,879 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 22484 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:09:13,881 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:09:13,881 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:09:14,643 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:09:14,745 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 99 ms. Found 8 JPA repository interfaces.
2021-08-31 16:09:14,959 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=42e872f2-a50e-36dd-8970-140820690bb3
2021-08-31 16:09:14,997 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:09:15,029 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:09:15,029 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:09:15,029 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:09:15,029 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:09:15,029 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:09:15,029 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:09:15,029 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:09:15,029 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:09:15,029 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:09:15,029 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:09:15,044 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$5906cf95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:09:15,044 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$afd218d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:09:15,075 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:09:15,075 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:09:15,229 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:09:15,229 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:09:15,398 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:09:15,398 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:09:15,398 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:09:15,577 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:09:15,577 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1657 ms
2021-08-31 16:09:15,628 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:09:15,644 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:09:15,644 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:09:15,644 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:09:15,644 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:09:15,644 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:09:15,644 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:09:15,815 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:09:15,862 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:09:15,978 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:09:16,047 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:09:16,379 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:09:16,401 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:09:17,635 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:09:17,635 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:09:17,698 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:09:18,036 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:09:18,099 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:09:18,506 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=initialize] [Line=181] - Initializing ExecutorService 'applicationTaskExecutor'
2021-08-31 16:09:18,638 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:09:18,638 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=shutdown] [Line=218] - Shutting down ExecutorService 'applicationTaskExecutor'
2021-08-31 16:09:18,638 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:09:18,638 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:09:18,654 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:09:18,654 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:09:18,654 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:09:18,685 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 17 common frames omitted
2021-08-31 16:10:33,869 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 22044 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:10:33,871 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:10:33,871 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:10:34,626 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:10:34,742 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 96 ms. Found 7 JPA repository interfaces.
2021-08-31 16:10:34,958 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=db15304a-8ecc-311f-bd88-e566e013c1f6
2021-08-31 16:10:35,005 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:10:35,027 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:10:35,027 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:10:35,027 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:10:35,027 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:10:35,027 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:10:35,027 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:10:35,027 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:10:35,027 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:10:35,027 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:10:35,027 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:10:35,058 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$5906cf95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:10:35,058 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$afd218d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:10:35,089 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:10:35,099 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:10:35,243 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:10:35,243 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:10:35,427 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:10:35,443 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:10:35,443 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:10:35,675 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:10:35,675 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1776 ms
2021-08-31 16:10:35,760 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:10:35,775 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:10:35,775 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:10:35,775 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:10:35,775 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:10:35,775 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:10:35,775 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:10:35,976 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:10:36,029 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:10:36,129 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:10:36,230 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:10:36,577 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:10:36,593 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:10:37,881 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:10:37,881 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:10:37,934 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:10:38,276 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:10:38,335 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:10:38,497 [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [Method=lambda$buildAutowiringMetadata$2] [Line=502] - Autowired annotation should only be used on methods with parameters: public java.util.List com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll()
2021-08-31 16:10:38,497 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true), @org.springframework.beans.factory.annotation.Qualifier("feasibilityNetworkWindowRepository")}
2021-08-31 16:10:38,497 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:10:38,497 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:10:38,513 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:10:38,513 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:10:38,513 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:10:38,535 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter [Method=report] [Line=40] - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field feasibilityNetworkWindowRepository in com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService required a bean of type 'com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)
	- @org.springframework.beans.factory.annotation.Qualifier("feasibilityNetworkWindowRepository")


Action:

Consider defining a bean of type 'com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository' in your configuration.

2021-08-31 16:13:34,803 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 17320 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:13:34,815 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:13:34,815 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:13:35,631 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:13:35,851 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 208 ms. Found 8 JPA repository interfaces.
2021-08-31 16:13:36,083 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:13:36,114 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:13:36,146 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:13:36,146 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:13:36,146 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:13:36,146 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:13:36,146 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:13:36,146 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:13:36,146 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:13:36,146 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:13:36,146 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:13:36,146 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:13:36,168 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$47a061f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:13:36,168 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$9e6bab32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:13:36,183 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:13:36,199 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:13:36,353 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:13:36,353 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:13:36,515 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:13:36,531 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:13:36,531 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:13:36,700 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:13:36,700 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1850 ms
2021-08-31 16:13:36,753 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:13:36,769 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:13:36,769 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:13:36,769 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:13:36,769 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:13:36,769 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:13:36,769 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:13:36,954 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:13:37,001 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:13:37,117 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:13:37,201 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:13:37,533 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:13:37,555 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:13:38,790 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:13:38,790 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:13:38,859 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:13:39,175 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:13:39,237 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:13:39,407 [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor [Method=lambda$buildAutowiringMetadata$2] [Line=502] - Autowired annotation should only be used on methods with parameters: public java.util.List com.telefonica.b2b.feasibility.datapower.service.impl.FeasibilityNetworkWindowService.getAll()
2021-08-31 16:13:39,407 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:13:39,422 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:13:39,422 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:13:39,422 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:13:39,422 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:13:39,438 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:13:39,460 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 31 common frames omitted
2021-08-31 16:14:54,258 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 8832 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:14:54,258 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:14:54,258 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:14:55,100 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:14:55,201 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 99 ms. Found 8 JPA repository interfaces.
2021-08-31 16:14:55,401 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:14:55,448 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:14:55,479 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:14:55,479 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:14:55,479 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:14:55,479 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:14:55,479 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:14:55,479 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:14:55,479 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:14:55,479 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:14:55,479 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:14:55,479 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:14:55,501 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$fb8cf14a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:14:55,501 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$52583a86] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:14:55,533 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:14:55,533 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:14:55,680 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:14:55,680 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:14:55,849 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:14:55,865 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:14:55,865 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:14:56,018 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:14:56,034 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1720 ms
2021-08-31 16:14:56,074 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:14:56,089 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:14:56,089 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:14:56,089 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:14:56,089 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:14:56,089 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:14:56,089 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:14:56,265 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:14:56,303 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:14:56,419 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:14:56,519 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:14:56,835 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:14:56,851 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:14:58,129 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:14:58,145 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:14:58,183 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:14:58,499 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:14:58,553 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:14:58,753 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:14:58,753 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:14:58,753 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:14:58,753 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:14:58,769 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:14:58,769 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:14:58,800 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 31 common frames omitted
2021-08-31 16:19:54,512 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 1472 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:19:54,512 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:19:54,512 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:19:55,257 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:19:55,357 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 96 ms. Found 8 JPA repository interfaces.
2021-08-31 16:19:55,589 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:19:55,658 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:19:55,689 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:19:55,689 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:19:55,689 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:19:55,705 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:19:55,705 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:19:55,705 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:19:55,705 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:19:55,705 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:19:55,705 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:19:55,705 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:19:55,736 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$e67f2e55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:19:55,736 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$3d4a7791] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:19:55,758 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:19:55,774 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:19:55,937 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:19:55,937 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:19:56,106 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:19:56,106 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:19:56,106 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:19:56,291 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:19:56,291 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1738 ms
2021-08-31 16:19:56,353 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:19:56,360 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:19:56,360 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:19:56,360 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:19:56,360 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:19:56,360 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:19:56,360 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:19:56,538 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:19:56,592 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:19:56,692 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:19:56,792 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:19:57,124 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:19:57,140 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:19:58,468 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:19:58,483 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:19:58,530 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:19:58,846 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:19:58,900 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:19:58,962 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:19:58,962 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:19:58,962 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:19:58,969 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:19:58,969 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:19:58,969 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:19:58,984 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 45 common frames omitted
2021-08-31 16:23:08,214 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 4524 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:23:08,216 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:23:08,216 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:23:09,117 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:23:09,240 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 107 ms. Found 8 JPA repository interfaces.
2021-08-31 16:23:09,487 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:23:09,541 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:23:09,556 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:23:09,572 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:23:09,572 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:23:09,572 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:23:09,572 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:23:09,572 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:23:09,572 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:23:09,572 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:23:09,572 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:23:09,572 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:23:09,603 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$3666523f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:23:09,603 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$8d319b7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:23:09,619 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:23:09,641 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:23:09,835 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:23:09,842 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:23:10,004 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:23:10,020 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:23:10,020 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:23:10,205 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:23:10,205 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1956 ms
2021-08-31 16:23:10,270 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:23:10,270 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:23:10,270 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:23:10,270 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:23:10,270 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:23:10,285 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:23:10,285 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:23:10,459 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:23:10,506 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:23:10,637 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:23:10,744 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:23:11,087 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:23:11,099 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:23:12,292 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:23:12,307 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:23:12,361 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:23:12,677 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:23:12,751 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:23:12,793 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:23:12,793 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:23:12,809 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:23:12,809 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:23:12,809 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:23:12,809 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:23:12,840 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 45 common frames omitted
2021-08-31 16:26:37,002 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 14184 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:26:37,003 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:26:37,003 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:26:37,758 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:26:37,858 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 96 ms. Found 8 JPA repository interfaces.
2021-08-31 16:26:38,059 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:26:38,106 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:26:38,137 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:26:38,143 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:26:38,143 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:26:38,143 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:26:38,143 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:26:38,143 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:26:38,143 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:26:38,143 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:26:38,143 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:26:38,143 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:26:38,159 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$16141265] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:26:38,159 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$6cdf5ba1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:26:38,190 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:26:38,190 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:26:38,344 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:26:38,344 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:26:38,507 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:26:38,522 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:26:38,522 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:26:38,692 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:26:38,692 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1651 ms
2021-08-31 16:26:38,745 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:26:38,745 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:26:38,745 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:26:38,745 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:26:38,745 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:26:38,745 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:26:38,745 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:26:38,908 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:26:38,961 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:26:39,077 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:26:39,161 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:26:39,509 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:26:39,525 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:26:40,766 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:26:40,766 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:26:40,813 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:26:41,129 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:26:41,192 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:26:41,383 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository.getAll()! No property getAll found for type FeasibilityMasterOrder!
2021-08-31 16:26:41,383 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:26:41,383 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:26:41,383 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:26:41,383 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:26:41,398 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:26:41,414 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository.getAll()! No property getAll found for type FeasibilityMasterOrder!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository.getAll()! No property getAll found for type FeasibilityMasterOrder!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository.getAll()! No property getAll found for type FeasibilityMasterOrder!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository.getAll()! No property getAll found for type FeasibilityMasterOrder!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:107)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:218)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:100)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:93)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1056)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:85)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:85)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:303)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 45 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property getAll found for type FeasibilityMasterOrder!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:437)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:413)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:366)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:348)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:331)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:249)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:250)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:383)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:384)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:92)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 71 common frames omitted
2021-08-31 16:28:04,502 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 13272 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:28:04,507 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:28:04,507 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:28:05,559 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:28:05,690 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 113 ms. Found 8 JPA repository interfaces.
2021-08-31 16:28:05,929 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:28:05,976 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:28:05,998 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:28:05,998 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:28:05,998 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:28:05,998 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:28:05,998 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:28:05,998 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:28:05,998 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:28:05,998 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:28:05,998 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:28:05,998 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:28:06,045 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$b74896d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:28:06,045 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$e13e00f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:28:06,060 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:28:06,076 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:28:06,261 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:28:06,261 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:28:06,446 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:28:06,446 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:28:06,461 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:28:06,646 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:28:06,646 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 2091 ms
2021-08-31 16:28:06,718 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:28:06,718 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:28:06,733 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:28:06,733 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:28:06,733 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:28:06,733 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:28:06,733 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:28:06,931 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:28:06,994 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:28:07,101 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:28:07,217 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:28:07,602 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:28:07,617 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:28:08,936 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:28:08,952 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:28:09,005 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:28:09,369 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:28:09,453 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:28:41,454 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:28:41,464 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:28:41,464 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:28:41,464 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:28:41,464 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:28:41,479 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:28:41,495 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 45 common frames omitted
2021-08-31 16:28:51,333 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 23468 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:28:51,339 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:28:51,339 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:28:52,464 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:28:52,587 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 117 ms. Found 8 JPA repository interfaces.
2021-08-31 16:28:52,849 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:28:52,918 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:28:52,950 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:28:52,950 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:28:52,950 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:28:52,950 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:28:52,950 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:28:52,950 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:28:52,950 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:28:52,950 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:28:52,950 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:28:52,950 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:28:52,987 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$a9570ba8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:28:52,987 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$2254e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:28:53,019 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:28:53,034 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:28:53,219 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:28:53,219 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:28:53,435 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:28:53,435 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:28:53,435 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:28:53,620 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:28:53,620 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 2219 ms
2021-08-31 16:28:53,689 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:28:53,689 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:28:53,689 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:28:53,689 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:28:53,689 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:28:53,689 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:28:53,705 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:28:53,936 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:28:53,990 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:28:54,137 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:28:54,253 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:28:54,654 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:28:54,669 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:28:56,079 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:28:56,095 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:28:56,142 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:28:56,512 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:28:56,581 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:28:57,347 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:28:57,347 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:28:57,357 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:28:57,357 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:28:57,357 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:28:57,389 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:28:57,452 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 45 common frames omitted
2021-08-31 16:33:44,509 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 13280 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:33:44,511 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:33:44,511 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:33:45,269 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:33:45,385 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 103 ms. Found 8 JPA repository interfaces.
2021-08-31 16:33:45,601 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:33:45,648 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:33:45,670 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:33:45,670 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:33:45,670 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:33:45,670 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:33:45,670 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:33:45,670 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:33:45,670 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:33:45,670 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:33:45,670 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:33:45,670 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:33:45,701 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$3f00728f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:33:45,701 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$95cbbbcb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:33:45,717 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:33:45,732 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:33:45,870 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:33:45,870 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:33:46,033 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:33:46,049 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:33:46,049 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:33:46,218 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:33:46,218 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1666 ms
2021-08-31 16:33:46,256 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:33:46,272 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:33:46,272 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:33:46,272 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:33:46,272 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:33:46,272 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:33:46,272 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:33:46,456 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:33:46,497 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:33:46,605 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:33:46,688 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:33:47,019 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:33:47,035 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:33:48,307 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:33:48,307 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:33:48,360 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:33:48,676 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:33:48,761 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:33:48,824 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:33:48,824 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:33:48,839 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:33:48,839 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:33:48,839 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:33:48,855 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:33:48,861 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 45 common frames omitted
2021-08-31 16:50:36,424 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 18956 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:50:36,426 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:50:36,426 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:50:37,210 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:50:37,310 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 101 ms. Found 8 JPA repository interfaces.
2021-08-31 16:50:37,526 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:50:37,573 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:50:37,595 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:50:37,611 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:50:37,611 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:50:37,611 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:50:37,611 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:50:37,611 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:50:37,611 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:50:37,611 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:50:37,611 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:50:37,611 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:50:37,627 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$7f61be2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:50:37,627 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$d62d076b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:50:37,658 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:50:37,673 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:50:37,827 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:50:37,827 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:50:37,996 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:50:38,012 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:50:38,012 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:50:38,190 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:50:38,190 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1725 ms
2021-08-31 16:50:38,228 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:50:38,244 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:50:38,244 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:50:38,244 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:50:38,244 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:50:38,244 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:50:38,244 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:50:38,429 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:50:38,474 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:50:38,598 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:50:38,676 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:50:39,015 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:50:39,030 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:50:40,265 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:50:40,280 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:50:40,318 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:50:40,635 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:50:40,697 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:50:40,753 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:50:40,753 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:50:40,753 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:50:40,753 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:50:40,753 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:50:40,769 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:50:40,784 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 45 common frames omitted
2021-08-31 16:57:37,329 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 17132 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:57:37,330 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:57:37,330 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:57:38,142 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:57:38,258 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 106 ms. Found 8 JPA repository interfaces.
2021-08-31 16:57:38,574 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:57:38,621 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:57:38,643 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:57:38,643 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:57:38,643 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:57:38,643 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:57:38,643 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:57:38,643 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:57:38,643 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:57:38,643 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:57:38,643 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:57:38,643 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:57:38,659 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$b4984fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:57:38,659 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$6214ce38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:57:38,690 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:57:38,690 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:57:38,837 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:57:38,837 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:57:38,991 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:57:39,007 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:57:39,007 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:57:39,160 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:57:39,160 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1801 ms
2021-08-31 16:57:39,201 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:57:39,216 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:57:39,216 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:57:39,216 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:57:39,216 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:57:39,216 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:57:39,216 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:57:39,376 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:57:39,423 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:57:39,539 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:57:39,624 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:57:39,947 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:57:39,962 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:57:41,181 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:57:41,196 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:57:41,250 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:57:41,682 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:57:41,744 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:57:42,099 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=initialize] [Line=181] - Initializing ExecutorService 'applicationTaskExecutor'
2021-08-31 16:57:42,230 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:57:42,230 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=shutdown] [Line=218] - Shutting down ExecutorService 'applicationTaskExecutor'
2021-08-31 16:57:42,230 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:57:42,230 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:57:42,230 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:57:42,230 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:57:42,246 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:57:42,252 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 17 common frames omitted
2021-08-31 16:58:37,771 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 19828 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:58:37,771 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:58:37,771 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:58:38,740 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:58:38,838 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 100 ms. Found 8 JPA repository interfaces.
2021-08-31 16:58:39,054 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:58:39,107 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:58:39,123 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:58:39,123 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:58:39,123 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:58:39,123 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:58:39,123 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:58:39,123 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:58:39,123 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:58:39,123 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:58:39,123 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:58:39,123 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:58:39,154 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$3f00728f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:58:39,154 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$95cbbbcb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:58:39,192 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:58:39,192 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:58:39,355 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:58:39,370 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:58:39,524 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:58:39,540 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:58:39,540 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:58:39,809 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:58:39,809 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1993 ms
2021-08-31 16:58:39,845 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:58:39,860 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:58:39,860 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:58:39,860 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:58:39,860 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:58:39,860 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:58:39,860 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:58:40,026 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:58:40,088 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:58:40,195 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:58:40,289 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:58:40,612 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:58:40,627 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:58:41,830 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:58:41,846 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:58:41,899 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:58:42,216 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:58:42,278 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:58:42,648 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=initialize] [Line=181] - Initializing ExecutorService 'applicationTaskExecutor'
2021-08-31 16:58:42,766 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:58:42,766 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=shutdown] [Line=218] - Shutting down ExecutorService 'applicationTaskExecutor'
2021-08-31 16:58:42,766 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:58:42,766 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:58:42,766 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:58:42,766 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:58:42,782 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:58:42,801 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 17 common frames omitted
2021-08-31 16:59:22,685 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 23280 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 16:59:22,694 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 16:59:22,695 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 16:59:23,585 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 16:59:23,701 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 100 ms. Found 8 JPA repository interfaces.
2021-08-31 16:59:23,917 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 16:59:23,955 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 16:59:23,971 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 16:59:23,986 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:59:23,986 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:59:23,986 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:59:23,986 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 16:59:23,986 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:59:23,986 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 16:59:23,986 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:59:23,986 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:59:23,986 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 16:59:24,002 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$ba8509b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:59:24,002 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$115052f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 16:59:24,033 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 16:59:24,033 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 16:59:24,187 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 16:59:24,187 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 16:59:24,356 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 16:59:24,372 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 16:59:24,372 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 16:59:24,550 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 16:59:24,550 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1783 ms
2021-08-31 16:59:24,591 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 16:59:24,607 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 16:59:24,607 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 16:59:24,607 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 16:59:24,607 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 16:59:24,607 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 16:59:24,607 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 16:59:24,772 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 16:59:24,835 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 16:59:24,951 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 16:59:25,035 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 16:59:25,443 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 16:59:25,451 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 16:59:26,658 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 16:59:26,674 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:59:26,722 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:59:27,044 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 16:59:27,091 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 16:59:27,445 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=initialize] [Line=181] - Initializing ExecutorService 'applicationTaskExecutor'
2021-08-31 16:59:27,577 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 16:59:27,577 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=shutdown] [Line=218] - Shutting down ExecutorService 'applicationTaskExecutor'
2021-08-31 16:59:27,577 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 16:59:27,577 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 16:59:27,577 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 16:59:27,577 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 16:59:27,592 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 16:59:27,608 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 17 common frames omitted
2021-08-31 17:00:19,292 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 18744 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 17:00:19,292 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 17:00:19,292 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 17:00:20,040 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 17:00:20,151 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 106 ms. Found 8 JPA repository interfaces.
2021-08-31 17:00:20,364 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 17:00:20,402 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 17:00:20,424 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 17:00:20,424 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:00:20,432 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:00:20,432 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:00:20,432 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 17:00:20,434 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:00:20,434 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:00:20,434 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:00:20,434 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:00:20,434 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:00:20,454 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$31da538] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 17:00:20,454 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$59e8ee74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 17:00:20,483 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 17:00:20,495 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 17:00:20,636 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 17:00:20,644 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 17:00:20,799 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 17:00:20,817 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 17:00:20,817 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 17:00:21,082 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 17:00:21,082 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1753 ms
2021-08-31 17:00:21,132 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 17:00:21,143 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 17:00:21,143 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 17:00:21,143 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 17:00:21,143 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 17:00:21,143 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 17:00:21,143 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 17:00:21,299 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 17:00:21,353 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 17:00:21,471 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 17:00:21,568 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 17:00:21,915 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 17:00:21,915 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 17:00:23,118 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 17:00:23,134 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 17:00:23,172 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 17:00:23,519 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 17:00:23,588 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 17:00:23,635 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 17:00:23,635 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 17:00:23,635 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 17:00:23,651 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 17:00:23,651 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 17:00:23,657 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 17:00:23,673 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowController': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'feasibilityNetworkWindowService': Unsatisfied dependency expressed through field 'feasibilityNetworkWindowRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1413)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 21 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 45 common frames omitted
2021-08-31 17:01:52,002 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 17356 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 17:01:52,005 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 17:01:52,005 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 17:01:52,800 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 17:01:52,915 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 104 ms. Found 8 JPA repository interfaces.
2021-08-31 17:01:53,132 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 17:01:53,169 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 17:01:53,185 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 17:01:53,201 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:01:53,201 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:01:53,201 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:01:53,201 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 17:01:53,201 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:01:53,201 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:01:53,201 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:01:53,201 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:01:53,201 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:01:53,216 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$a111721c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 17:01:53,216 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$f7dcbb58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 17:01:53,247 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 17:01:53,263 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 17:01:53,401 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 17:01:53,417 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 17:01:53,586 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 17:01:53,602 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 17:01:53,602 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 17:01:53,934 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 17:01:53,934 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1886 ms
2021-08-31 17:01:53,987 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 17:01:54,003 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 17:01:54,018 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 17:01:54,018 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 17:01:54,018 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 17:01:54,018 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 17:01:54,018 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 17:01:54,234 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 17:01:54,288 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 17:01:54,403 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 17:01:54,504 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 17:01:54,867 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 17:01:54,873 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 17:01:56,054 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 17:01:56,076 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 17:01:56,123 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 17:01:56,409 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 17:01:56,477 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 17:01:56,825 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=initialize] [Line=181] - Initializing ExecutorService 'applicationTaskExecutor'
2021-08-31 17:01:56,957 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 17:01:56,957 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=shutdown] [Line=218] - Shutting down ExecutorService 'applicationTaskExecutor'
2021-08-31 17:01:56,957 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 17:01:56,957 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 17:01:56,957 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 17:01:56,957 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 17:01:56,979 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 17:01:56,994 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 17 common frames omitted
2021-08-31 17:02:48,581 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 22468 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 17:02:48,581 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 17:02:48,581 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 17:02:49,393 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 17:02:49,509 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 101 ms. Found 8 JPA repository interfaces.
2021-08-31 17:02:49,710 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=303933db-6b4d-328f-814f-438d1438e379
2021-08-31 17:02:49,757 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 17:02:49,788 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 17:02:49,788 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:02:49,788 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:02:49,788 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:02:49,788 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 17:02:49,794 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:02:49,794 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:02:49,794 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:02:49,794 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:02:49,794 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:02:49,810 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$50fffcc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 17:02:49,810 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$a7cb4601] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 17:02:49,841 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 17:02:49,841 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 17:02:49,995 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 17:02:50,011 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 17:02:50,173 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 17:02:50,173 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 17:02:50,173 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 17:02:50,343 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 17:02:50,343 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1714 ms
2021-08-31 17:02:50,396 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 17:02:50,412 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 17:02:50,412 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 17:02:50,412 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 17:02:50,412 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 17:02:50,412 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 17:02:50,412 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 17:02:50,590 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 17:02:50,628 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 17:02:50,730 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 17:02:50,829 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 17:02:51,161 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 17:02:51,192 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 17:02:52,449 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 17:02:52,449 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 17:02:52,518 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 17:02:52,850 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 17:02:52,903 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 17:02:53,282 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=initialize] [Line=181] - Initializing ExecutorService 'applicationTaskExecutor'
2021-08-31 17:02:53,405 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext [Method=refresh] [Line=591] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
2021-08-31 17:02:53,405 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=shutdown] [Line=218] - Shutting down ExecutorService 'applicationTaskExecutor'
2021-08-31 17:02:53,405 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=destroy] [Line=651] - Closing JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 17:02:53,420 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=350] - HikariPool-1 - Shutdown initiated...
2021-08-31 17:02:53,420 [main] INFO  c.z.h.HikariDataSource [Method=close] [Line=352] - HikariPool-1 - Shutdown completed.
2021-08-31 17:02:53,420 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Stopping service [Tomcat]
2021-08-31 17:02:53,420 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener [Method=logMessage] [Line=136] - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-08-31 17:02:53,436 [main] ERROR o.s.b.SpringApplication [Method=reportFailure] [Line=871] - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feasibilityNetworkWindowRepository' defined in com.telefonica.b2b.feasibility.datapower.repository.FeasibilityNetworkWindowRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:925)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1340)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1329)
	at com.telefonica.b2b.feasibility.datapower.DatapowerApplication.main(DatapowerApplication.java:12)
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.telefonica.b2b.feasibility.datapower.dto.FeasibilityNetworkWindowDTO
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:582)
	at org.hibernate.metamodel.internal.MetamodelImpl.managedType(MetamodelImpl.java:85)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:75)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:66)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:229)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:179)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:162)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:281)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1845)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 17 common frames omitted
2021-08-31 17:16:43,261 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=55] - Starting DatapowerApplication using Java 16.0.2 on BOG-6F0K1Z2 with PID 6140 (C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK\datapower\target\classes started by yrodrigg in C:\Users\yrodrigg\OneDrive - everis\Documentos\Viabilizador\Viabilizador_B2B_BK)
2021-08-31 17:16:43,265 [main] DEBUG c.t.b.f.d.DatapowerApplication [Method=logStarting] [Line=56] - Running with Spring Boot v2.4.5, Spring v5.3.6
2021-08-31 17:16:43,265 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStartupProfileInfo] [Line=679] - The following profiles are active: dev
2021-08-31 17:16:44,132 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=128] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2021-08-31 17:16:44,248 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate [Method=registerRepositoriesIn] [Line=188] - Finished Spring Data repository scanning in 98 ms. Found 7 JPA repository interfaces.
2021-08-31 17:16:44,480 [main] INFO  o.s.c.c.s.GenericScope [Method=setSerializationId] [Line=283] - BeanFactory id=db15304a-8ecc-311f-bd88-e566e013c1f6
2021-08-31 17:16:44,517 [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor [Method=postProcessBeanFactory] [Line=39] - Post-processing PropertySource instances
2021-08-31 17:16:44,533 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2021-08-31 17:16:44,533 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:16:44,549 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:16:44,549 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:16:44,549 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2021-08-31 17:16:44,549 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:16:44,549 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource cachedrandom [org.springframework.cloud.util.random.CachedRandomPropertySource] to EncryptablePropertySourceWrapper
2021-08-31 17:16:44,549 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource springCloudClientHostInfo [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:16:44,549 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application-dev.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:16:44,549 [main] INFO  c.u.j.EncryptablePropertySourceConverter [Method=makeEncryptable] [Line=56] - Converting PropertySource Config resource 'class path resource [application.properties]' via location 'optional:classpath:/' [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2021-08-31 17:16:44,564 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'webServiceConfig' of type [com.telefonica.b2b.feasibility.datapower.config.WebServiceConfig$$EnhancerBySpringCGLIB$$ccd8893a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 17:16:44,564 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [Method=postProcessAfterInitialization] [Line=376] - Bean 'org.springframework.ws.config.annotation.DelegatingWsConfiguration' of type [org.springframework.ws.config.annotation.DelegatingWsConfiguration$$EnhancerBySpringCGLIB$$23a3d276] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-08-31 17:16:44,602 [main] INFO  o.s.w.s.a.s.AnnotationActionEndpointMapping [Method=afterPropertiesSet] [Line=236] - Supporting [WS-Addressing August 2004, WS-Addressing 1.0]
2021-08-31 17:16:44,602 [main] INFO  c.u.j.f.DefaultLazyPropertyFilter [Method=lambda$null$2] [Line=31] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2021-08-31 17:16:44,751 [main] INFO  c.u.j.r.DefaultLazyPropertyResolver [Method=lambda$null$2] [Line=35] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2021-08-31 17:16:44,751 [main] INFO  c.u.j.d.DefaultLazyPropertyDetector [Method=lambda$null$2] [Line=35] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2021-08-31 17:16:44,934 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=initialize] [Line=108] - Tomcat initialized with port(s): 9001 (http)
2021-08-31 17:16:44,950 [main] INFO  o.a.c.c.StandardService [Method=log] [Line=173] - Starting service [Tomcat]
2021-08-31 17:16:44,950 [main] INFO  o.a.c.c.StandardEngine [Method=log] [Line=173] - Starting Servlet engine: [Apache Tomcat/9.0.45]
2021-08-31 17:16:45,119 [main] INFO  o.a.c.c.C.[.[.[/] [Method=log] [Line=173] - Initializing Spring embedded WebApplicationContext
2021-08-31 17:16:45,119 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext [Method=prepareWebApplicationContext] [Line=289] - Root WebApplicationContext: initialization completed in 1803 ms
2021-08-31 17:16:45,157 [main] INFO  c.u.j.e.DefaultLazyEncryptor [Method=lambda$null$2] [Line=37] - String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2021-08-31 17:16:45,173 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.key-obtention-iterations, using default value: 1000
2021-08-31 17:16:45,173 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.pool-size, using default value: 1
2021-08-31 17:16:45,173 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-name, using default value: null
2021-08-31 17:16:45,173 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.provider-class-name, using default value: null
2021-08-31 17:16:45,173 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.salt-generator-classname, using default value: org.jasypt.salt.RandomSaltGenerator
2021-08-31 17:16:45,173 [main] INFO  c.u.j.c.StringEncryptorBuilder [Method=get] [Line=81] - Encryptor config not found for property jasypt.encryptor.string-output-type, using default value: base64
2021-08-31 17:16:45,335 [main] INFO  o.h.j.i.u.LogHelper [Method=logPersistenceUnitInformation] [Line=31] - HHH000204: Processing PersistenceUnitInfo [name: default]
2021-08-31 17:16:45,397 [main] INFO  o.hibernate.Version [Method=logVersion] [Line=44] - HHH000412: Hibernate ORM core version 5.4.30.Final
2021-08-31 17:16:45,504 [main] INFO  o.h.a.common.Version [Method=<clinit>] [Line=56] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-08-31 17:16:45,598 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=110] - HikariPool-1 - Starting...
2021-08-31 17:16:45,952 [main] INFO  c.z.h.HikariDataSource [Method=getConnection] [Line=123] - HikariPool-1 - Start completed.
2021-08-31 17:16:45,967 [main] INFO  o.h.dialect.Dialect [Method=<init>] [Line=175] - HHH000400: Using dialect: org.hibernate.dialect.SQLServer2012Dialect
2021-08-31 17:16:47,240 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator [Method=initiateService] [Line=52] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-08-31 17:16:47,255 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean [Method=buildNativeEntityManagerFactory] [Line=437] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-08-31 17:16:47,308 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 17:16:47,640 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration [Method=openEntityManagerInViewInterceptor] [Line=221] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-08-31 17:16:47,687 [main] INFO  o.s.w.s.s.SaajSoapMessageFactory [Method=afterPropertiesSet] [Line=141] - Creating SAAJ 1.3 MessageFactory with SOAP 1.1 Protocol
2021-08-31 17:16:48,057 [main] INFO  o.s.s.c.ThreadPoolTaskExecutor [Method=initialize] [Line=181] - Initializing ExecutorService 'applicationTaskExecutor'
2021-08-31 17:16:48,465 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration [Method=restTemplateDiscoveryClientOptionalArgs] [Line=68] - Eureka HTTP Client uses RestTemplate.
2021-08-31 17:16:48,696 [main] WARN  o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger [Method=logWarning] [Line=82] - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2021-08-31 17:16:48,749 [main] INFO  o.s.c.n.e.InstanceInfoFactory [Method=create] [Line=67] - Setting initial instance status as: STARTING
2021-08-31 17:16:48,796 [main] INFO  c.n.d.DiscoveryClient [Method=<init>] [Line=372] - Initializing Eureka in region us-east-1
2021-08-31 17:16:48,812 [main] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 17:16:48,850 [main] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1007] - Disable delta property : false
2021-08-31 17:16:48,850 [main] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1008] - Single vip registry refresh property : null
2021-08-31 17:16:48,850 [main] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1009] - Force full registry fetch : false
2021-08-31 17:16:48,850 [main] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1010] - Application is null : false
2021-08-31 17:16:48,850 [main] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1011] - Registered Applications size is zero : true
2021-08-31 17:16:48,850 [main] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1013] - Application version is -1: true
2021-08-31 17:16:48,850 [main] INFO  c.n.d.DiscoveryClient [Method=getAndStoreFullRegistry] [Line=1097] - Getting all instance registry info from the eureka server
2021-08-31 17:16:49,335 [main] INFO  c.n.d.DiscoveryClient [Method=getAndStoreFullRegistry] [Line=1106] - The response status is 200
2021-08-31 17:16:49,351 [main] INFO  c.n.d.DiscoveryClient [Method=initScheduledTasks] [Line=1321] - Starting heartbeat executor: renew interval is: 30
2021-08-31 17:16:49,351 [main] INFO  c.n.d.InstanceInfoReplicator [Method=<init>] [Line=60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-08-31 17:16:49,367 [main] INFO  c.n.d.DiscoveryClient [Method=<init>] [Line=492] - Discovery Client initialized at timestamp 1630448209367 with initial instances count: 0
2021-08-31 17:16:49,367 [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry [Method=register] [Line=41] - Registering application DATAPOWER with eureka with status UP
2021-08-31 17:16:49,367 [main] INFO  c.n.d.DiscoveryClient [Method=notify] [Line=1352] - Saw local status change event StatusChangeEvent [timestamp=1630448209367, current=UP, previous=STARTING]
2021-08-31 17:16:49,367 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.DiscoveryClient [Method=register] [Line=873] - DiscoveryClient_DATAPOWER/BOG-6F0K1Z2.usersad.everis.int:datapower:9001: registering service...
2021-08-31 17:16:49,396 [main] INFO  o.s.b.w.e.t.TomcatWebServer [Method=start] [Line=220] - Tomcat started on port(s): 9001 (http) with context path ''
2021-08-31 17:16:49,396 [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration [Method=onApplicationEvent] [Line=144] - Updating port to 9001
2021-08-31 17:16:49,483 [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.n.d.DiscoveryClient [Method=register] [Line=882] - DiscoveryClient_DATAPOWER/BOG-6F0K1Z2.usersad.everis.int:datapower:9001 - registration status: 204
2021-08-31 17:16:49,598 [main] INFO  c.t.b.f.d.DatapowerApplication [Method=logStarted] [Line=61] - Started DatapowerApplication in 7.295 seconds (JVM running for 8.213)
2021-08-31 17:17:19,361 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1007] - Disable delta property : false
2021-08-31 17:17:19,361 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1008] - Single vip registry refresh property : null
2021-08-31 17:17:19,362 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1009] - Force full registry fetch : false
2021-08-31 17:17:19,362 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1010] - Application is null : false
2021-08-31 17:17:19,362 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1011] - Registered Applications size is zero : true
2021-08-31 17:17:19,362 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.DiscoveryClient [Method=fetchRegistry] [Line=1013] - Application version is -1: false
2021-08-31 17:17:19,363 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.DiscoveryClient [Method=getAndStoreFullRegistry] [Line=1097] - Getting all instance registry info from the eureka server
2021-08-31 17:17:19,374 [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.n.d.DiscoveryClient [Method=getAndStoreFullRegistry] [Line=1106] - The response status is 200
2021-08-31 17:21:48,869 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 17:26:48,887 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 17:31:48,888 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 17:36:48,889 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 17:41:48,893 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 17:46:48,905 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 17:51:48,917 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 17:56:48,927 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:01:48,937 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:06:48,946 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:11:48,960 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:15:21,130 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.DiscoveryClient [Method=renew] [Line=897] - DiscoveryClient_DATAPOWER/BOG-6F0K1Z2.usersad.everis.int:datapower:9001 - Re-registering apps/DATAPOWER
2021-08-31 18:15:21,130 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.DiscoveryClient [Method=register] [Line=873] - DiscoveryClient_DATAPOWER/BOG-6F0K1Z2.usersad.everis.int:datapower:9001: registering service...
2021-08-31 18:15:21,143 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.DiscoveryClient [Method=register] [Line=882] - DiscoveryClient_DATAPOWER/BOG-6F0K1Z2.usersad.everis.int:datapower:9001 - registration status: 204
2021-08-31 18:16:48,974 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:16:51,202 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.DiscoveryClient [Method=renew] [Line=897] - DiscoveryClient_DATAPOWER/BOG-6F0K1Z2.usersad.everis.int:datapower:9001 - Re-registering apps/DATAPOWER
2021-08-31 18:16:51,202 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.DiscoveryClient [Method=register] [Line=873] - DiscoveryClient_DATAPOWER/BOG-6F0K1Z2.usersad.everis.int:datapower:9001: registering service...
2021-08-31 18:16:51,202 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.DiscoveryClient [Method=register] [Line=882] - DiscoveryClient_DATAPOWER/BOG-6F0K1Z2.usersad.everis.int:datapower:9001 - registration status: 204
2021-08-31 18:18:51,246 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.DiscoveryClient [Method=renew] [Line=897] - DiscoveryClient_DATAPOWER/BOG-6F0K1Z2.usersad.everis.int:datapower:9001 - Re-registering apps/DATAPOWER
2021-08-31 18:18:51,246 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.DiscoveryClient [Method=register] [Line=873] - DiscoveryClient_DATAPOWER/BOG-6F0K1Z2.usersad.everis.int:datapower:9001: registering service...
2021-08-31 18:18:51,246 [DiscoveryClient-HeartbeatExecutor-0] INFO  c.n.d.DiscoveryClient [Method=register] [Line=882] - DiscoveryClient_DATAPOWER/BOG-6F0K1Z2.usersad.everis.int:datapower:9001 - registration status: 204
2021-08-31 18:21:48,977 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:26:48,992 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:31:49,001 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:36:49,012 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:41:49,028 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:46:49,048 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:51:49,054 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 18:56:49,065 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:01:49,068 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:06:49,075 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:11:49,083 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:16:49,099 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:21:49,115 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:26:49,118 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:31:49,135 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:36:49,141 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:41:49,158 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:46:49,164 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:51:49,175 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 19:56:49,186 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:01:49,197 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:06:49,208 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:11:49,214 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:16:49,217 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:21:49,230 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:26:49,234 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:31:49,244 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:36:49,253 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:41:49,271 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:46:49,282 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:51:49,288 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 20:56:49,311 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 21:01:49,319 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 21:06:49,335 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 21:11:49,338 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 21:16:49,355 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 21:21:49,358 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
2021-08-31 21:26:49,361 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.a.ConfigClusterResolver [Method=getClusterEndpoints] [Line=43] - Resolving eureka endpoints via configuration
